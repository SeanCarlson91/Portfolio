  Sean Carlson Data Structures IC 12.cpp
c:\users\genlab\desktop\sean carlson data structures ic 12\sean carlson data structures ic 12\sean carlson data structures ic 12.cpp(45): warning C4018: '<': signed/unsigned mismatch
c:\users\genlab\desktop\sean carlson data structures ic 12\sean carlson data structures ic 12\sean carlson data structures ic 12.cpp(62): warning C4018: '<': signed/unsigned mismatch
c:\users\genlab\desktop\sean carlson data structures ic 12\sean carlson data structures ic 12\sean carlson data structures ic 12.cpp(89): warning C4018: '<': signed/unsigned mismatch
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(920): error C2665: 'std::pair<const _Kty,_Ty>::pair': none of the 2 overloads could convert all the argument types
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\utility(137): note: could be 'std::pair<const _Kty,_Ty>::pair(std::pair<const _Kty,_Ty> &&)'
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\utility(136): note: or       'std::pair<const _Kty,_Ty>::pair(const std::pair<const _Kty,_Ty> &)'
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xmemory0(918): note: while trying to match the argument list '(char)'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(762): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,char&>(_Alloc &,_Objty *const ,char &)' being compiled
          with
          [
              _Alloc=std::allocator<std::_List_node<std::pair<const char,int>,std::_Default_allocator_traits<std::allocator<std::pair<const char,int>>>::void_pointer>>,
              _Ty=std::pair<const char,int>,
              _Objty=std::pair<const char,int>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(767): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,char&>(_Alloc &,_Objty *const ,char &)' being compiled
          with
          [
              _Alloc=std::allocator<std::_List_node<std::pair<const char,int>,std::_Default_allocator_traits<std::allocator<std::pair<const char,int>>>::void_pointer>>,
              _Ty=std::pair<const char,int>,
              _Objty=std::pair<const char,int>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(1001): note: see reference to function template instantiation 'std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<char&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,char &)' being compiled
          with
          [
              _Ty=std::pair<const char,int>,
              _Alloc=std::allocator<std::pair<const char,int>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(1004): note: see reference to function template instantiation 'std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<char&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,char &)' being compiled
          with
          [
              _Ty=std::pair<const char,int>,
              _Alloc=std::allocator<std::pair<const char,int>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(967): note: see reference to function template instantiation 'void std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Insert<char&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>,std::_Iterator_base0>,char &)' being compiled
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\list(968): note: see reference to function template instantiation 'void std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Insert<char&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>,std::_Iterator_base0>,char &)' being compiled
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.14.26428\include\xhash(301): note: see reference to function template instantiation 'void std::list<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::emplace_front<char&>(char &)' being compiled
          with
          [
              _Kty=char,
              _Ty=int
          ]
  c:\users\genlab\desktop\sean carlson data structures ic 12\sean carlson data structures ic 12\sean carlson data structures ic 12.cpp(47): note: see reference to function template instantiation 'std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,bool> std::_Hash<std::_Umap_traits<_Kty,int,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace<char&>(char &)' being compiled
          with
          [
              _Ty=std::pair<const char,int>,
              _Kty=char,
              _Hasher=std::hash<char>,
              _Keyeq=std::equal_to<char>,
              _Alloc=std::allocator<std::pair<const char,int>>
          ]
  c:\users\genlab\desktop\sean carlson data structures ic 12\sean carlson data structures ic 12\sean carlson data structures ic 12.cpp(47): note: see reference to function template instantiation 'std::pair<std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,bool> std::_Hash<std::_Umap_traits<_Kty,int,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::emplace<char&>(char &)' being compiled
          with
          [
              _Ty=std::pair<const char,int>,
              _Kty=char,
              _Hasher=std::hash<char>,
              _Keyeq=std::equal_to<char>,
              _Alloc=std::allocator<std::pair<const char,int>>
          ]
